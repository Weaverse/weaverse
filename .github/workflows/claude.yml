name: Claude Code

on:
  # Automatic PR reviews
  pull_request:
    types: [opened, synchronize]
  # Manual triggers via @claude mentions
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  # Automatic PR review job
  claude-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v1
        env:
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_AUTH_TOKEN }}
          
          # Prompt for automated review
          prompt: |
            Review this Weaverse SDKs monorepo PR for critical issues and architectural consistency. This is a foundational SDK package - changes impact all downstream implementations.

            **üö® Critical Breaking Changes**
            ‚Ä¢ Major version bumps required: API signature changes, removed exports, breaking schema changes
            ‚Ä¢ Cross-package dependency conflicts: version mismatches, circular dependencies, missing peer deps
            ‚Ä¢ Changesets missing for user-facing changes: API modifications, new features, breaking changes
            ‚Ä¢ Security vulnerabilities: exposed secrets, injection risks, unsafe eval(), prototype pollution
            ‚Ä¢ Performance regressions: O(n¬≤) algorithms, memory leaks, blocking operations, bundle size increases

            **üèóÔ∏è Architecture & Code Quality**
            ‚Ä¢ TypeScript type safety: eliminate `any` usage, enforce strict typing, fix type inference issues
            ‚Ä¢ Framework-agnostic @weaverse/core: zero React/framework dependencies, pure functions only
            ‚Ä¢ Error handling patterns: proper try/catch, error boundaries, meaningful error messages, graceful degradation
            ‚Ä¢ Memory management: cleanup functions, event listener removal, weak references where appropriate
            ‚Ä¢ API consistency: naming conventions, parameter patterns, return types across all packages

            **üì¶ SDK-Specific Deep Dive**
            ‚Ä¢ Component schema integrity: validation accuracy, prop type safety, default value handling, schema evolution
            ‚Ä¢ Data connector patterns: immutability guarantees, caching strategies, subscription lifecycle, data transformation
            ‚Ä¢ Framework integration (@weaverse/react, @weaverse/hydrogen): hooks patterns, provider setup, SSR compatibility
            ‚Ä¢ Package entry points: clean exports, proper re-exports, tree-shaking friendly, side-effect free
            ‚Ä¢ Template system: backward compatibility, migration path, performance optimizations, extensibility

            **üîç Package Structure Review**
            ‚Ä¢ @weaverse/core: Framework-agnostic, minimal dependencies, robust type definitions
            ‚Ä¢ @weaverse/react: React 18+ patterns, hooks optimization, concurrent rendering support
            ‚Ä¢ @weaverse/hydrogen: Shopify Hydrogen integration, SSR/SSG compatibility, performance optimization
            ‚Ä¢ @weaverse/shopify: Shopify API integration, webhooks handling, theme compatibility
            ‚Ä¢ Cross-package consistency: shared utilities, unified patterns, version alignment

            **‚ö° Performance & Bundle Impact**
            ‚Ä¢ Bundle size analysis: tree-shaking effectiveness, dead code elimination, import patterns
            ‚Ä¢ Runtime performance: memoization strategies, rendering optimization, subscription efficiency
            ‚Ä¢ Development experience: build times, hot reload, debugging capabilities, error reporting

            **üìã Review Focus Areas**
            **SKIP**: Minor formatting, naming conventions, basic linting (unless affecting API)
            **PRIORITIZE**: Breaking changes, performance regressions, type safety issues, architectural inconsistencies
            **HIGHLIGHT**: Security vulnerabilities, memory leaks, cross-package conflicts

            **üéØ Output Requirements**
            1. Line-specific references with exact file paths
            2. Concrete code examples for fixes
            3. Breaking change impact assessment
            4. Performance implications with metrics where possible
            5. Migration guidance for affected users
            6. Test recommendations for edge cases

            Focus on issues that would impact developers building on Weaverse SDKs. Provide actionable, implementable feedback with clear priority levels.

          # Use sticky comments to update the same comment
          use_sticky_comment: true

  # Manual trigger job for @claude mentions
  claude-mention:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        env:
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_AUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

